package adobe:cai@0.1.0;

world cai {
    export manifest;
    export types;
}

interface types {
    use wasi:io/streams@0.2.2.{input-stream, output-stream};
    use wasi:filesystem/types@0.2.2.{descriptor};

    variant error {
        assertion(string),
        assertion-not-found(string),
        bad-param(string),
        decoding(string),
        encoding(string),
        file-not-found(string),
        io(string),
        json(string),
        manifest(string),
        manifest-not-found(string),
        not-supported(string),
        other(string),
        remote-manifest(string),
        resource-not-found(string),
        rw-lock,
        signature(string),
        verify(string),
    }

    variant input {
        file(descriptor),
        %stream(input-stream)
    }

    variant output {
        file(descriptor),
        %stream(output-stream)
    }

}

interface manifest {
    use wasi:io/streams@0.2.2.{input-stream, output-stream};
    use types.{error, input, output};

    get-manifest-store: func(buf: list<u8>, mime-type: string, settings: option<string>) -> result<list<u8>, error>;
    get-manifest-store-from-manifest-and-asset: func(manifest-buf: list<u8>, asset-buf: list<u8>, mime-type: string, settings: option<string>) -> result<list<u8>, error>;

    resource builder {
        constructor(json: option<string>);
        add-resource: func(uri: string, %stream: input) -> result<_, error>;
        set-remote-url: func(url: string);
        add-ingredient: func(ingredient-json: string, format: string, %stream: input) -> result<_, error>;
        to-archive: func(%stream: output) -> result<_, error>;
        from-archive: static func(%stream: input) -> result<builder, error>;
    }

    resource reader {
        constructor(json: option<string>);
        from-stream: static func(format: string, %stream: input) -> result<reader, error>;
        from-manifest-data-and-stream: static func(manifest-data: list<u8>, format: string, %stream: input) -> result<reader, error>;
        json: func() -> string;
        resource-to-stream: func(uri: string, %stream: output) -> result<u64, error>;
    }
}

world c2pa-tool {
    import manifest;
}

world c2pa-node {
    import manifest;
    export wasi:http/incoming-handler@0.2.2;
}

